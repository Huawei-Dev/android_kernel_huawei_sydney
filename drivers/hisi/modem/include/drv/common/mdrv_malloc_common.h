#ifndef __MDRV_COMMON_MALLOC_H__
#define __MDRV_COMMON_MALLOC_H__
#ifdef __cplusplus
extern "C"
{
#endif

/**
 * flags, for mdrv_mem_alloc
 */
#define __MEM_ALIGN_008 0x01u /**< 8????????*/
#define __MEM_ALIGN_016 0x02u/**< 16????????*/
#define __MEM_ALIGN_032 0x04u/**< 32????????*/
#define __MEM_ALIGN_064 0x08u/**< 64????????*/
#define __MEM_ALIGN_128 0x10u/**< 128????????*/
#define __MEM_ALIGN_256 0x20u/**< 256????????*/
#define __MEM_ALIGN_512 0x40u/**< 512????????*/
#define __MEM_ALIGN_1K  0x80u/**< 1K????????*/
#define __MEM_ALIGN_MSK 0xffu

#define __MEM_DMA       0x100u/*????uncached????*/

/*****************************************************************************
 *  ?? ?? ??  : mdrv_reserved_mem_malloc
 *  ????????  : ??????????????????????????????????????
 *  ????????  :
 *              size: ????????????
 *              request_id: ????ID
 *
 *  ????????  :
 *  ?? ?? ??  :  NULL   ??????????
 *               ????   ????????????????
 *
 ******************************************************************************/
void* mdrv_reserved_mem_malloc(unsigned int size, enum MALLOC_RESERVED_REQ_ID request_id);
 
 /*****************************************************************************
  *  ?? ?? ??  : mdrv_cached_mem_malloc
  *  ????????  : ????cached????
  *  ????????  :
  * 			 size: ????????????
  * 			 request_id: ????ID
  *
  *  ????????  :
  *  ?? ?? ??  :  NULL	 ??????????
  * 			  ????	 ????????????????
  *
  ******************************************************************************/
void* mdrv_cached_mem_malloc(unsigned int size); 
 
/*****************************************************************************
*  ?? ?? ??  : mdrv_cached_mem_free
*  ????????  : ????????cached??????
*  ????????  :
* 			 addr: ??????????
*
*  ????????  : ??
*  ?? ?? ??  : ??
*
******************************************************************************/
void mdrv_cached_mem_free(void* addr); 

/*****************************************************************************
 *  ?? ?? ??  : mdrv_uncached_mem_malloc
 *  ????????  : ????uncached????
 *  ????????  :
 *              size: ????????????
 *              request_id: ????ID
 *
 *  ????????  :
 *  ?? ?? ??  :  NULL   ??????????
 *               ????   ????????????????
 *
 ******************************************************************************/
void* mdrv_uncached_mem_malloc(unsigned int size); 

/*****************************************************************************
 *  ?? ?? ??  : mdrv_uncached_mem_free
 *  ????????  : ????????uncached??????
 *  ????????  :
 *              addr: ??????????
 *
 *  ????????  : ??
 *  ?? ?? ??  : ??
 *
 ******************************************************************************/
int mdrv_uncached_mem_free(void* addr); 

/*****************************************************************************
 *  ?? ?? ??  : mdrv_mem_alloc
 *  ????????  : ????????????????
 *  ????????  :
 *              size: ????????????
 *              flag: ????????
 *
 *  ????????  :
 *  ?? ?? ??  :  NULL   ??????????
 *               ????   ????????????????
 *
 ******************************************************************************/
void* mdrv_mem_alloc(unsigned int size, unsigned int flag);

/*****************************************************************************
 *  ?? ?? ??  : mdrv_mem_free
 *  ????????  : ??????????????
 *  ????????  :
 *              addr: ??????????
 *
 *  ????????  : ??
 *  ?? ?? ??  : ??
 *
 ******************************************************************************/
int mdrv_mem_free(void* addr);

#ifdef __cplusplus
}
#endif
#endif
