/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2012-2015. All rights reserved.
 * foss@huawei.com
 *
 * If distributed as part of the Linux kernel, the following license terms
 * apply:
 *
 * * This program is free software; you can redistribute it and/or modify
 * * it under the terms of the GNU General Public License version 2 and
 * * only version 2 as published by the Free Software Foundation.
 * *
 * * This program is distributed in the hope that it will be useful,
 * * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * * GNU General Public License for more details.
 * *
 * * You should have received a copy of the GNU General Public License
 * * along with this program; if not, write to the Free Software
 * * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
 *
 * Otherwise, the following license terms apply:
 *
 * * Redistribution and use in source and binary forms, with or without
 * * modification, are permitted provided that the following conditions
 * * are met:
 * * 1) Redistributions of source code must retain the above copyright
 * *    notice, this list of conditions and the following disclaimer.
 * * 2) Redistributions in binary form must reproduce the above copyright
 * *    notice, this list of conditions and the following disclaimer in the
 * *    documentation and/or other materials provided with the distribution.
 * * 3) Neither the name of Huawei nor the names of its contributors may
 * *    be used to endorse or promote products derived from this software
 * *    without specific prior written permission.
 *
 * * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */


#ifndef __MSP_DIAG_COMM_H__
#define __MSP_DIAG_COMM_H__

#ifdef __cplusplus
extern "C"
{
#endif

#include <product_config.h>
#include <vos.h>
#include <mdrv.h>

/**************************************************************************
  ??????
**************************************************************************/

/*????PS??MODID ??DIAG_AIR_MSG_LOG_ID??????????????DIAG_ID*/
#define DIAG_ID(module_id, log_type)   (VOS_UINT32)(module_id | (log_type << 12))

#define DIAG_AIR_MSG_LOG_ID(module_id, is_up_link)  DIAG_ID(module_id, is_up_link) /*module_id????PID*/

#define DIAG_GEN_LOG_MODULE(modemid, modetype, level)  \
               (((VOS_UINT32)(modemid & 0xff) << 24)  \
              | ((VOS_UINT32)(modetype & 0xf) << 16)  \
              | ((VOS_UINT32)(level    & 0xf ) << 12))

#define DIAG_GEN_MODULE(modemid, modetype)  \
               (((VOS_UINT32)(modemid & 0xff) << 24)  \
              | ((VOS_UINT32)(modetype & 0xf) << 16))


#define DIAG_GEN_MODULE_EX(modemid, modetype, groupid)  \
                   (((VOS_UINT32)(modemid & 0xff) << 24)  \
                  | ((VOS_UINT32)(modetype & 0xf) << 16) \
                  | ((VOS_UINT32)(groupid  & 0xf)  << 8))

#define DIAG_GEN_LOG_ID(filenum, linenum)   \
                ((((VOS_UINT32)(filenum & 0XFFFF)) << 16)   \
                | ((VOS_UINT32)(linenum & 0XFFFF)))

/*is_up_link????*/
#define OS_MSG_UL                (0x01)/* ????????????*/
#define OS_MSG_DL                (0x02)/* ????????????*/

#define DIAG_SIDE_UE             (0x1)  /* ????UE????????????????NET-->UE*/
#define DIAG_SIDE_NET            (0x2)  /* ????NET????????????????UE-->NET*/

/* ????????????????????*/
#define DIAG_LOG_TYPE_INFO            0x00000008UL
#define DIAG_LOG_TYPE_AUDIT_FAILURE   0x00000004UL
#define DIAG_LOG_TYPE_AUDIT_SUCCESS   0x00000002UL
#define DIAG_LOG_TYPE_ERROR           0x00000001UL
#define DIAG_LOG_TYPE_WARNING         0x00000010UL

/* MSP????????*/
#define ID_MSG_DIAG_HSO_DISCONN_IND                 (0x00010004)

/*diag AGENT????PS??????HSO????????*/
#define ID_MSG_DIAG_CMD_REPLAY_TO_PS    			(0x00010100)

/* diag ?????????????????????????? */
#define ID_MSG_DIAG_CMD_CONNECT_REQ    		        (0x00010200)
#define ID_MSG_DIAG_CMD_CONNECT_CNF    		        (ID_MSG_DIAG_CMD_CONNECT_REQ)
/* diag ?????????????????????????? */
#define ID_MSG_DIAG_CMD_DISCONNECT_REQ    		    (0x00010202)
#define ID_MSG_DIAG_CMD_DISCONNECT_CNF    		    (ID_MSG_DIAG_CMD_DISCONNECT_REQ)

/* diag ??????TL-PHY?????????????? */
#define ID_MSG_DIAG_DSP_CONNECT_REQ    		        (0x30004903)
#define ID_MSG_DIAG_DSP_CONNECT_CNF    		        (ID_MSG_DIAG_DSP_CONNECT_REQ)
/* diag ??????TL-PHY?????????????? */
#define ID_MSG_DIAG_DSP_DISCONNECT_REQ    		    (0x30004904)
#define ID_MSG_DIAG_DSP_DISCONNECT_CNF    		    (ID_MSG_DIAG_DSP_DISCONNECT_REQ)

/* diag ??????HL1C?????????????? */
#define ID_MSG_DIAG_HL1C_CONNECT_REQ    		    (0x3f000007)
#define ID_MSG_DIAG_HL1C_CONNECT_CNF    		    (ID_MSG_DIAG_HL1C_CONNECT_REQ)
/* diag ??????HL1C?????????????? */
#define ID_MSG_DIAG_HL1C_DISCONNECT_REQ    		    (0x3f000006)
#define ID_MSG_DIAG_HL1C_DISCONNECT_CNF    		    (ID_MSG_DIAG_HL1C_DISCONNECT_REQ)
/* ???????? */
#define ID_MSG_DIAG_NRPHY_PORT_INFO                 (0x3f00000a)

/* ???????????????? DIAG_MESSAGE_TYPE_U32 ???? */

/* 2000 - 2fff????PS?????????? */

/* c000 - cfff????HIFI?????????? */
#define     DIAG_HIFI_RELEASE_REQ                   (0x0000c001)

/*****************************************************************************
  4 Enum
*****************************************************************************/

/* ==============??????????????????????==================================== */

/* MSP_DIAG_STID_STRU:pri4b */
#ifdef DIAG_SYSTEM_5G
enum DIAG_MESSAGE_TYPE
{
    DIAG_MSG_TYPE_RSV       = 0x0,
    DIAG_MSG_TYPE_MSP       = 0x1,
    DIAG_MSG_TYPE_PS        = 0x2,
    DIAG_MSG_TYPE_PHY       = 0x3,
    DIAG_MSG_TYPE_BBP       = 0x4,
    DIAG_MSG_TYPE_HSO       = 0x5,
    DIAG_MSG_TYPE_BSP       = 0x9, /*MODEM BSP*/
    DIAG_MSG_TYPE_EASYRF    = 0xa,
    DIAG_MSG_TYPE_AP_BSP    = 0xb, /*AP BSP*/
    DIAG_MSG_TYPE_AUDIO     = 0xc,
    DIAG_MSG_TYPE_APP       = 0xe,
    DIAG_MSG_TYPE_BUTT
};
#else
enum DIAG_MESSAGE_TYPE
{
    DIAG_MSG_TYPE_RSV   = 0x0,
    DIAG_MSG_TYPE_MSP   = 0x1,
    DIAG_MSG_TYPE_PS    = 0x2,
    DIAG_MSG_TYPE_PHY   = 0x3,
    DIAG_MSG_TYPE_BBP   = 0x4,
    DIAG_MSG_TYPE_HSO   = 0x5,
    DIAG_MSG_TYPE_BSP   = 0x9,
    DIAG_MSG_TYPE_ISP   = 0xa,
    DIAG_MSG_TYPE_AUDIO = 0xc,
    DIAG_MSG_TYPE_APP   = 0xe,
    DIAG_MSG_TYPE_BUTT
};
#endif
typedef VOS_UINT32 DIAG_MESSAGE_TYPE_U32;

/* MSP_DIAG_STID_STRU:mode4b */
enum DIAG_MODE_TYPE
{
    DIAG_MODE_LTE  = 0x0,
    DIAG_MODE_TDS  = 0x1,
    DIAG_MODE_GSM  = 0x2,
    DIAG_MODE_UMTS = 0x3,
    DIAG_MODE_1X   = 0x4,
    DIAG_MODE_HRPD = 0x5,
    DIAG_MODE_NR   = 0x6,
    DIAG_MODE_COMM = 0xf
};
typedef VOS_UINT32 DIAG_MODE_TYPE_U32;


enum DIAG_MODEM_ID
{
    DIAG_MODEM_0 = 0x0,
    DIAG_MODEM_1 = 0x1,
    DIAG_MODEM_2 = 0x2
};
typedef unsigned int DIAG_MODEM_ID_U32;

typedef enum
{
    PS_LOG_LEVEL_OFF  = 0,
    PS_LOG_LEVEL_ERROR,
    PS_LOG_LEVEL_WARNING,
    PS_LOG_LEVEL_NORMAL,
    PS_LOG_LEVEL_INFO,
    PS_LOG_LEVEL_BUTT
}PS_LOG_LEVEL_EN;

/**************************************************************************
  5 ????????
**************************************************************************/

/**************************************************************************
  ????????
**************************************************************************/

/* ==============????????????????========================================== */

typedef struct
{
    VOS_UINT32        ulModule;		/* DIAG_GEN_MODULE*/
    VOS_UINT32        ulPid;
    VOS_UINT32        ulEventId;		/* ????ID */
    VOS_UINT32        ulLength;
    VOS_VOID          *pData;
}DIAG_EVENT_IND_STRU;

typedef struct
{
    VOS_UINT32        ulModule;       /* DIAG_GEN_MODULE*/
    VOS_UINT32        ulPid;
    VOS_UINT32        ulMsgId;
    VOS_UINT32        ulDirection;
    VOS_UINT32        ulLength;
    VOS_VOID          *pData;
}DIAG_AIR_IND_STRU;

typedef struct
{
    VOS_UINT32        ulModule;
    VOS_UINT32        ulPid;
    VOS_UINT32        ulMsgId;
    VOS_UINT32        ulReserve;
    VOS_UINT32        ulLength;
    VOS_VOID          *pData;
} DIAG_TRANS_IND_STRU;

/*********************************????????????********************************************/
/* OSA?????? */
typedef struct
{
    VOS_MSG_HEADER
    VOS_UINT32              ulMsgId;           /* ????ID */
    VOS_UINT32              ulLen;             /* ???????? */
    VOS_UINT8               pContext[0];       /* ????????????*/ /*lint !e43 */
}DIAG_OSA_MSG_HEAD;

typedef DIAG_OSA_MSG_HEAD DIAG_CFG_MSG_HEAD;

/* ?????????? */
typedef struct{
	VOS_UINT32		        ulMsgId;            /* ????ID */
	VOS_UINT32		        ulLen;              /* ???????? */
	VOS_UINT8		        *pContext[0];       /* ????????????*/ /*lint !e43 */
}DIAG_CORE_MSG_HEAD;

/* ??TLPHY?????? */
typedef struct
{
	VOS_UINT32              ulMsgId;            /* ????ID */
	VOS_UINT8	            *pContext[0];        /*lint !e43 */
}DIAG_PHY_MSG_HEAD;

typedef struct{
    VOS_UINT32			    ulChannelId;	    /* ????ID */
    VOS_UINT32			    ulResult;		    /*  ???????? 0????, 0x5C5C5C5C??????????, 0x5A5A5A5A??????????, ??????????*/
}DIAG_CONNECT_RESULT;

/* ??????????????????,  ??????-> DIAG */
typedef struct{
    VOS_UINT32				ulSn;
    DIAG_CONNECT_RESULT     pstResult[0];    /*lint !e43 */
}DIAG_CONN_CNF_MSG_STRU;

/* ??????????????????,  DIAG -> ?????? */
typedef struct{
    VOS_UINT32				ulSn;
}DIAG_CONN_REQ_MSG_STRU;


/* ????ID :ID_MSG_DIAG_CMD_REPLAY_TO_PS */
typedef struct
{
    VOS_UINT32 ulReserved;/*????*/
} DIAG_CMD_REPLAY_SET_REQ_STRU;

/* ????ID: DIAG_HIFI_RELEASE_REQ*/
typedef struct
{
    VOS_UINT32                  ulRsv;
} DIAG_MSG_TO_OTHERCPU_DISCONN_STRU;


/* ??????????????????????????????????????OSA???????? */
typedef VOS_VOID* (*DIAG_LayerMsgMatchFunc)(VOS_VOID *pMsg);
/*****************************************************************************
 Function Name   : DIAG_TraceMatchFuncReg
 Description        : ????????????????????(??????????????????????????????????????)
 Input                : ????????????
 Output              : None
 Return              : ????????????????: 0-??????????????-????????
*****************************************************************************/
VOS_UINT32 DIAG_LayerMsgMatchFuncReg(DIAG_LayerMsgMatchFunc pFun);

/* ????????????????????notify???? */
typedef VOS_UINT32 (*DIAG_LayerMsgMatchNotifyFunc)(VOS_UINT32 sendPid, VOS_VOID *pMsg);
/*****************************************************************************
 Function Name   : DIAG_TraceMatchFuncReg
 Description        : ??????????????notify????????(??????????????????????????????????????)
 Input                : ????????????
 Output              : None
 Return              : ????????????????: 0-??????????????-????????
*****************************************************************************/
VOS_UINT32 DIAG_LayerMsgMatchNotifyFuncReg(DIAG_LayerMsgMatchNotifyFunc pFun);

/*****************************************************************************
 ???? ??      : DIAG_TransReport
 ????????   : ??????????????????(??????????DIAG_ReportCommand)
 ????????   : DIAG_TRANS_IND_STRU->ulModule( 31-24:modemid,19-16:modeid)
 ????????    : DIAG_TRANS_IND_STRU->ulPid(??????PID)
                          DIAG_TRANS_IND_STRU->ulMsgId(????????ID)
                          DIAG_TRANS_IND_STRU->ulLength(??????????????)
                          DIAG_TRANS_IND_STRU->pData(????????)
*****************************************************************************/
VOS_UINT32 DIAG_TransReport(DIAG_TRANS_IND_STRU *pstData);

/*****************************************************************************
 ???? ??       : DIAG_TransReport_Ex
 ????????    : ????????????????????????(????DIAG_TransReport????????11-8bits ????????)
 ????????    : DIAG_TRANS_IND_STRU->ulModule( 31-24:modemid,19-16:modeid, 11-8:groupid )
 ????????    : DIAG_TRANS_IND_STRU->ulPid(??????PID)
                            DIAG_TRANS_IND_STRU->ulMsgId(????????ID)
                            DIAG_TRANS_IND_STRU->ulLength(??????????????)
                            DIAG_TRANS_IND_STRU->pData(????????)
*****************************************************************************/
VOS_UINT32 DIAG_TransReport_Ex(DIAG_TRANS_IND_STRU *pstData);

/*****************************************************************************
 ???? ??      : DIAG_LogReport
 ????????  : ????????????
 ????????  : ulModuleId( 31-24:modemid,19-16:modeid,15-12:level )
                          ulPid( PID )
                          pcFileName(????????????????????????????????????)
                          ulLineNum(????)
                          pszFmt(????????)
????????  : ??????????????????????????????????????????????????????????????1K????????????????????????????????
                         ??????????????????????????????
                         ????????????????????????????????????????????????1K??????
                         ????????????????????log????????1K??????????????????????
*****************************************************************************/
VOS_UINT32 DIAG_LogReport(VOS_UINT32 ulModuleId, VOS_UINT32 ulPid, VOS_CHAR *cFileName, VOS_UINT32 ulLineNum, VOS_CHAR* pszFmt, ...);
/******************************************************************************
????????: DIAG_LogIdReport
????????: ????????????????????????
????????:ulModuleId[in]  : ( 31-24:modemid,23-16:modeid,15-12:level )
                      ulPid[in]           : PID
                      ulLogId[in]       : ??????????????????DIAG_LOG_ID????
                      amount[in]       : ????????????????????ulModuleId/ulLevel/ulLogId/amout??
                      ...                   : ????????
????????:
            1. ????????????????????????????????????????
            2. ????????????????????????????????????????amount????????????
            3. ??????????????int????
            4. ??????????????????????????????6??????????????????????
******************************************************************************/
VOS_INT32 DIAG_LogIdReport(VOS_UINT32 ulModuleId, VOS_UINT32 ulPid,
                        VOS_UINT32 ulLogId, VOS_UINT32 amount, ...);

/*****************************************************************************
 ???? ??     : DIAG_EventReport
 ????????  : ????????????????PS????(??????????DIAG_ReportEventLog)
 ????????  : DIAG_EVENT_IND_STRU->ulModule( 31-24:modemid,19-16:modeid )
                          DIAG_EVENT_IND_STRU->ulEventId(event ID)
                          DIAG_EVENT_IND_STRU->ulLength(event??????)
                          DIAG_EVENT_IND_STRU->pData(event????)
*****************************************************************************/
VOS_UINT32 DIAG_EventReport(DIAG_EVENT_IND_STRU *pstEvent);

/*****************************************************************************
 ???? ??       : DIAG_AirMsgReport
 ????????  : ????????????????????PS????(??????????DIAG_ReportAirMessageLog)
 ????????  : DIAG_AIR_IND_STRU->ulModule( 31-24:modemid,23-16:modeid)
                          DIAG_AIR_IND_STRU->ulMsgId(????????ID)
                          DIAG_AIR_IND_STRU->ulDirection(??????????????)
                          DIAG_AIR_IND_STRU->ulLength(??????????????)
                          DIAG_AIR_IND_STRU->pData(????????????)
*****************************************************************************/
VOS_UINT32 DIAG_AirMsgReport(DIAG_AIR_IND_STRU *pstAir);

/*****************************************************************************
 ?? ?? ??     : DIAG_TraceReport
 ????????  : ????????????????????PS????(??????????DIAG_ReportLayerMessageLog)
 ????????  : pMsg(??????VOS??????????????????????????????????????????)
*****************************************************************************/
VOS_VOID DIAG_TraceReport(VOS_VOID *pMsg);

/*****************************************************************************
 Function Name   : DIAG_GetConnState
 Description        : ????????????????????
 Return              : 1:connect; 0:disconnect
*****************************************************************************/
VOS_UINT32 DIAG_GetConnState(VOS_VOID);

/*****************************************************************************
 ?? ?? ??     : Log_GetPrintLevel
 ????????  : ????????Id????????Id??????????????????????????
 return               : PS_LOG_LEVEL_EN
*****************************************************************************/
VOS_UINT32 Diag_GetLogLevel(VOS_UINT32 ulPid);
/*****************************************************************************
 ?? ?? ??  : DIAG_RttReport	1344
 ????????  : 1. ????TL PHY??????NR/LR Modem????,????TLPHY RTT????
             2. ??????????TLPHY??????????????????TLPHY??????????????????service????????????(??sid????)
             3. Rtt Agent??????????msp??????msp_diag_comm.h(????msp.h)
             4. ??????????????????msp_diag_comm.h(????msp.h)
             5. pData???????? ulDataLen??????0
             6. ??????????ulDataLen????????????????pData????????
             7. ulDataLen????????64K
 ??????   :  ERR_MSP_SUCCESS  ????
             ERR_MSP_DIAG_SRC_BUFF_ALLOC_FAIL ????????????
             ??????          ????
*****************************************************************************/
VOS_UINT32 DIAG_RttReport(VOS_VOID *pData, VOS_UINT32 ulDatalen);
#ifdef __cplusplus
    }
#endif
#endif

